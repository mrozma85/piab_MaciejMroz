// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projekt.Data.Data;

#nullable disable

namespace Projekt.Data.Migrations
{
    [DbContext(typeof(ProjektContext))]
    [Migration("20220622204159_m15")]
    partial class m15
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Projekt.Data.Data.CMS.CzymSieZajmujemy", b =>
                {
                    b.Property<int>("IdCzymSieZajmujemy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCzymSieZajmujemy"), 1L, 1);

                    b.Property<string>("LinkCzymSieZajmujemy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pozycja")
                        .HasColumnType("int");

                    b.Property<string>("Tresc1CzymSieZajmujemy")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Tresc2CzymSieZajmujemy")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("TytulCzymSieZajmujemy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCzymSieZajmujemy");

                    b.ToTable("CzymSieZajmujemy");
                });

            modelBuilder.Entity("Projekt.Data.Data.CMS.Kontakt", b =>
                {
                    b.Property<int>("IdKontaktu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdKontaktu"), 1L, 1);

                    b.Property<int>("Pozycja")
                        .HasColumnType("int");

                    b.Property<string>("TrescKontaktu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdKontaktu");

                    b.ToTable("Kontakt");
                });

            modelBuilder.Entity("Projekt.Data.Data.CMS.Nawigacja", b =>
                {
                    b.Property<int>("IdNawigacji")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNawigacji"), 1L, 1);

                    b.Property<string>("LinkNawigacji")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pozycja")
                        .HasColumnType("int");

                    b.Property<string>("TrescNawigacji")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("TytulNawigacji")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdNawigacji");

                    b.ToTable("Nawigacja");
                });

            modelBuilder.Entity("Projekt.Data.Data.CMS.Opinie", b =>
                {
                    b.Property<int>("IdOpini")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOpini"), 1L, 1);

                    b.Property<string>("ImieINazwiskoDodajacego")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkOpini")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naglowek1Opini")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naglowek2Opini")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pozycja")
                        .HasColumnType("int");

                    b.Property<string>("TrescOpini")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("IdOpini");

                    b.ToTable("Opinie");
                });

            modelBuilder.Entity("Projekt.Data.Data.CMS.PytaniaIOdpowiedzi", b =>
                {
                    b.Property<int>("IdPytaniaIOdpowiedzi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPytaniaIOdpowiedzi"), 1L, 1);

                    b.Property<string>("LinkPytaniaIOdpowiedzi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pozycja")
                        .HasColumnType("int");

                    b.Property<string>("TrescPytaniaIOdpowiedzi")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("TytulPytaniaIOdpowiedzi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPytaniaIOdpowiedzi");

                    b.ToTable("PytaniaIOdpowiedzi");
                });

            modelBuilder.Entity("Projekt.Data.Data.Oferta.ElementUslugi", b =>
                {
                    b.Property<int>("IdElementuUslugi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdElementuUslugi"), 1L, 1);

                    b.Property<DateTime>("DataUtworzenia")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdRodzajuTransportu")
                        .HasColumnType("int");

                    b.Property<string>("IdSesjiKoszyka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ilosc")
                        .HasColumnType("int");

                    b.Property<int>("RodzajTransportuIdRodzajuTransportu")
                        .HasColumnType("int");

                    b.HasKey("IdElementuUslugi");

                    b.HasIndex("RodzajTransportuIdRodzajuTransportu");

                    b.ToTable("ElementUslugi");
                });

            modelBuilder.Entity("Projekt.Data.Data.Oferta.Oferta", b =>
                {
                    b.Property<int>("IdOferty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOferty"), 1L, 1);

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdOferty");

                    b.ToTable("Oferta");
                });

            modelBuilder.Entity("Projekt.Data.Data.Oferta.RodzajTransportu", b =>
                {
                    b.Property<int>("IdRodzajuTransportu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRodzajuTransportu"), 1L, 1);

                    b.Property<decimal>("Cena")
                        .HasColumnType("money");

                    b.Property<int>("IdOferty")
                        .HasColumnType("int");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OfertaIdOferty")
                        .HasColumnType("int");

                    b.Property<bool>("PromocjaOferty")
                        .HasColumnType("bit");

                    b.HasKey("IdRodzajuTransportu");

                    b.HasIndex("OfertaIdOferty");

                    b.ToTable("RodzajTransportu");
                });

            modelBuilder.Entity("Projekt.Data.Data.Oferta.ElementUslugi", b =>
                {
                    b.HasOne("Projekt.Data.Data.Oferta.RodzajTransportu", "RodzajTransportu")
                        .WithMany()
                        .HasForeignKey("RodzajTransportuIdRodzajuTransportu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RodzajTransportu");
                });

            modelBuilder.Entity("Projekt.Data.Data.Oferta.RodzajTransportu", b =>
                {
                    b.HasOne("Projekt.Data.Data.Oferta.Oferta", "Oferta")
                        .WithMany("RodzajTransportu")
                        .HasForeignKey("OfertaIdOferty")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Oferta");
                });

            modelBuilder.Entity("Projekt.Data.Data.Oferta.Oferta", b =>
                {
                    b.Navigation("RodzajTransportu");
                });
#pragma warning restore 612, 618
        }
    }
}
